/**
 *
 * Given a word, write a function to generate all of its unique
 * generalized abbreviations.
 *
 * Generalized abbreviation of a word can be generated by replacing
 * each substring of the word by the count of characters in the
 * substring. Take the example of “ab” which has four substrings:
 * “”, “a”, “b”, and “ab”. After replacing these substrings in the
 * actual word by the count of characters we get all the generalized
 * abbreviations: “ab”, “1b”, “a1”, and “2”.
 *
 * @author anitgeorge
 */

import java.util.*;

class GeneralizedAbbreviation {

    public static List<String> generateGeneralizedAbbreviation(String word) {
        List<String> result = new ArrayList<String>();
        backtrack(result, "", word, 0, 0);
        return result;
    }

    private static void backtrack(List<String> result, String curr, String word, int pos, int count){

        if(pos == word.length()){
            if(count > 0)
                curr+=count;
            result.add(curr);
            return;
        }
        backtrack(result, curr, word, pos + 1, count + 1);
        backtrack(result, curr + (count > 0? count : "")+word.charAt(pos), word, pos + 1, 0);

    }

    public static void main(String[] args) {
        List<String> result = GeneralizedAbbreviation.generateGeneralizedAbbreviation("BAT");
        System.out.println("Generalized abbreviation are: " + result);

        result = GeneralizedAbbreviation.generateGeneralizedAbbreviation("code");
        System.out.println("Generalized abbreviation are: " + result);
    }
}
